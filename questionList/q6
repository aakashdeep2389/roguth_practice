Level 3
The banking system should allow scheduling payments and checking the status of scheduled payments.

TRANSFER <timestamp> <sourceAccountId> <targetAccountId> <amount> — should initiate a transfer between accounts. The given amount of money should be withdrawn from the source account sourceAccountId and held until the transfer is accepted by the target account targetAccountId, or until the transfer expires. The withheld money is added back to the source account's balance if the transfer expires. After the query is processed:

Returns an empty string if sourceAccountId is equal to targetAccountId.
Returns an empty string if sourceAccountId or targetAccountId doesn't exist.
Returns an empty string if the source account sourceAccountId has insufficient funds to perform the transfer.
The expiration period is 24 hours, which is equal to 24 · 60 · 60 · 1000 = 86400000 milliseconds. A transfer expires at the beginning of the next millisecond after the expiration period ends.
A valid TRANSFER should return a string containing a unique transfer ID in the following format "transfer[ordinal number of the transfer]", e.g., "transfer1", "transfer2", etc.
For transfers, transaction history for source and target accounts is only updated when the transfer is accepted.
Transfers count toward the total value of transactions of both source and target accounts.
ACCEPT_TRANSFER <timestamp> <accountId> <transferId> — should accept the transfer with the given transferId.

Returns "true" if the transfer was successfully accepted or "false" otherwise.
Returns "false" if a transfer with transferId does not exist, was already accepted, or has expired.
Returns "false" if the given accountId was not the target account for the transfer.
Examples
The examples below show how these operations should work (the section is scrollable to the right):

Queries	Explanations
queries = [
  ["CREATE_ACCOUNT", "1", "account1"],
  ["CREATE_ACCOUNT", "2", "account2"],
  ["DEPOSIT", "3", "account1", "2000"],
  ["DEPOSIT", "4", "account2", "3000"],
  ["TRANSFER", "5", "account1", "account2", "5000"],
  ["TRANSFER", "16", "account1", "account2", "1000"],
  ["ACCEPT_TRANSFER", "20", "account1", "transfer1"],
  ["ACCEPT_TRANSFER", "21", "non-existing", "transfer1"],
  ["ACCEPT_TRANSFER", "22", "account1", "transfer2"],
  ["ACCEPT_TRANSFER", "25", "account2", "transfer1"],
  ["ACCEPT_TRANSFER", "30", "account2", "transfer1"],
  ["TRANSFER", "40", "account1", "account2", "1000"],
  ["ACCEPT_TRANSFER", str(45 + MILLISECONDS_IN_1_DAY), "account2", "transfer2"],
  ["TRANSFER", str(50 + MILLISECONDS_IN_1_DAY), "account1", "account1", "1000"]
]

returns "true"
returns "true"
returns "2000"
returns "3000"
returns ""; "account1" has insufficient funds
returns "transfer1"
returns "false"; "account1" is not the target account for this transfer
returns "false"; this account does not exist
returns "false"; this transfer does not exist
returns "true"
returns "false"; the transfer was already accepted
returns "transfer2"
returns "false"; the transfer has expired
returns ""; the source account is equal to the target account

the output should be ["true", "true", "2000", "3000", "", "transfer1", "false", "false", "false", "true", "false", "transfer2", "false", ""].

Another example:

Queries	Explanations
queries = [
  ["CREATE_ACCOUNT", "1", "account1"],
  ["CREATE_ACCOUNT", "2", "account2"],
  ["CREATE_ACCOUNT", "3", "account3"],
  ["DEPOSIT", "4", "account1", "1000"],
  ["DEPOSIT", "5", "account2", "1100"],
  ["DEPOSIT", "6", "account3", "1200"],
  ["TRANSFER", "7", "account2", "account1", "300"],
  ["TOP_ACTIVITY", "8", "3"],
  ["ACCEPT_TRANSFER", "9", "account1", "transfer1"],
  ["TOP_ACTIVITY", "10", "3"]
]

returns "true"
returns "true"
returns "true"
returns "1000"
returns "1100"
returns "1200"
returns "transfer1"
returns "account3(1200), account2(1100), account1(1000)"
returns "true"
returns "account2(1400), account1(1300), account3(1200)"

the output should be ["true", "true", "true", "1000", "1100", "1200", "transfer1", "account3(1200), account2(1100), account1(1000)", "true", "account2(1400), account1(1300), account3(1200)"].